balancing
https://www.google.com/search?q=left+rotate+avl+tree&sxsrf=APq-WBufjPAqwgWdMtwIKBvB_GlE9Wb3rA:1650632541107&source=lnms&tbm=isch&sa=X&ved=2ahUKEwict5Gy3af3AhWhgv0HHUtKCfoQ_AUoAXoECAEQAw&biw=1573&bih=937&dpr=2#imgrc=dSDsjXrU0WszEM

deleting
http://www.mathcs.emory.edu/~cheung/Courses/253/Syllabus/Trees/AVL-delete.html

- Friend Function:
    Like friend class, a friend function can be given a special grant to access private and protected members. A friend function can be: 
        a) A member of another class 
        b) A global function 

// ------------------------------------------------------------------------------------------------------- //

- Allocators :
    are objects responsible for encapsulating memory management.

// ------------------------------------------------------------------------------------------------------- //

- The “tag”:
     in tag dispatching refers to a type that has no behaviour and no data:


// ------------------------------------------------------------------------------------------------------- //

- Equivalence (data): is a property typical of values, such as numbers. 
- Identity (addresses): is a property typical of entities, such as people.

// ------------------------------------------------------------------------------------------------------- //

Lvalue and Rvalue:

- Lvalue : object reference
- Rvalue (non reference) : value (An rvalue does not necessarily have any storage associated with it)

// ------------------------------------------------------------------------------------------------------- //

mutable iterators (non-constant iterators):

// ------------------------------------------------------------------------------------------------------- //
explicit :
    - 
Explicit Keyword in C++ is used to mark constructors to not implicitly convert types in C++. 

// ------------------------------------------------------------------------------------------------------- //

Allocator	- An allocator that is used to acquire/release memory and to construct/destroy the elements in that memory. 

// ------------------------------------------------------------------------------------------------------- //

- Template argument deduction (type) :(fait de deduire)
    in c++17 compiler auto deduce type template wihout mentionned
    EX; function<int>(n)   ->>>  function(n)

- Template argument substitution
    replace argument in template with specified one;

- 
- Template metaprogramming : ???????
    Template metaprogramming is a family of techniques to create new types and compute values at compile time

- SFINAE : "Substitution Failure Is Not An Error" // = remplacement


// ------------------------------------------------------------------------------------------------------- //

